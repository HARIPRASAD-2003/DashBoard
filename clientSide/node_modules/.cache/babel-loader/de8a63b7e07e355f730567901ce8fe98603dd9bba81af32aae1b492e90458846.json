{"ast":null,"code":"var _jsxFileName = \"D:\\\\SDE-FS\\\\DashBoard\\\\frontend\\\\src\\\\pages\\\\DashBoard.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function scrapeLeetCodeProfile(username) {\n  try {\n    const url = `https://leetcode.com/${username}/`;\n    const response = await axios.get(url);\n    const $ = cheerio.load(response.data);\n\n    // Extract the solved problems count\n    const solvedCount = $('.user-casual-info .user-casual-item').filter((index, element) => $(element).text().includes('Solved')).find('.total-solved').text().trim();\n    return {\n      username,\n      solvedCount\n    };\n  } catch (error) {\n    console.error('Error:', error.message);\n    return null;\n  }\n}\n\n// Replace 'your-leetcode-username' with the actual username you want to scrape\nconst leetCodeUsername = 'HARI_PRASAD_2003';\nscrapeLeetCodeProfile(leetCodeUsername).then(userData => {\n  if (userData) {\n    console.log(`LeetCode Profile for ${userData.username}`);\n    console.log(`Solved Problems: ${userData.solvedCount}`);\n  } else {\n    console.log('Failed to fetch LeetCode profile data.');\n  }\n});\nconst DashBoard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"DashBoard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","scrapeLeetCodeProfile","username","url","response","get","$","cheerio","load","data","solvedCount","filter","index","element","text","includes","find","trim","error","console","message","leetCodeUsername","then","userData","log","DashBoard","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SDE-FS/DashBoard/frontend/src/pages/DashBoard.jsx"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nasync function scrapeLeetCodeProfile(username) {\r\n  try {\r\n    const url = `https://leetcode.com/${username}/`;\r\n\r\n    const response = await axios.get(url);\r\n    const $ = cheerio.load(response.data);\r\n\r\n    // Extract the solved problems count\r\n    const solvedCount = $('.user-casual-info .user-casual-item')\r\n      .filter((index, element) => $(element).text().includes('Solved'))\r\n      .find('.total-solved')\r\n      .text()\r\n      .trim();\r\n\r\n    return {\r\n      username,\r\n      solvedCount,\r\n    };\r\n  } catch (error) {\r\n    console.error('Error:', error.message);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Replace 'your-leetcode-username' with the actual username you want to scrape\r\nconst leetCodeUsername = 'HARI_PRASAD_2003';\r\n\r\nscrapeLeetCodeProfile(leetCodeUsername).then((userData) => {\r\n  if (userData) {\r\n    console.log(`LeetCode Profile for ${userData.username}`);\r\n    console.log(`Solved Problems: ${userData.solvedCount}`);\r\n  } else {\r\n    console.log('Failed to fetch LeetCode profile data.');\r\n  }\r\n});\r\n\r\n\r\nconst DashBoard = () => {\r\n  return (\r\n    <div>DashBoard</div>\r\n  )\r\n}\r\n\r\nexport default DashBoard"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAeC,qBAAqBA,CAACC,QAAQ,EAAE;EAC7C,IAAI;IACF,MAAMC,GAAG,GAAI,wBAAuBD,QAAS,GAAE;IAE/C,MAAME,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACF,GAAG,CAAC;IACrC,MAAMG,CAAC,GAAGC,OAAO,CAACC,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC;;IAErC;IACA,MAAMC,WAAW,GAAGJ,CAAC,CAAC,qCAAqC,CAAC,CACzDK,MAAM,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAKP,CAAC,CAACO,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAChEC,IAAI,CAAC,eAAe,CAAC,CACrBF,IAAI,CAAC,CAAC,CACNG,IAAI,CAAC,CAAC;IAET,OAAO;MACLf,QAAQ;MACRQ;IACF,CAAC;EACH,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACE,OAAO,CAAC;IACtC,OAAO,IAAI;EACb;AACF;;AAEA;AACA,MAAMC,gBAAgB,GAAG,kBAAkB;AAE3CpB,qBAAqB,CAACoB,gBAAgB,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;EACzD,IAAIA,QAAQ,EAAE;IACZJ,OAAO,CAACK,GAAG,CAAE,wBAAuBD,QAAQ,CAACrB,QAAS,EAAC,CAAC;IACxDiB,OAAO,CAACK,GAAG,CAAE,oBAAmBD,QAAQ,CAACb,WAAY,EAAC,CAAC;EACzD,CAAC,MAAM;IACLS,OAAO,CAACK,GAAG,CAAC,wCAAwC,CAAC;EACvD;AACF,CAAC,CAAC;AAGF,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACEzB,OAAA;IAAA0B,QAAA,EAAK;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAExB,CAAC;AAAAC,EAAA,GAJKN,SAAS;AAMf,eAAeA,SAAS;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}